# 문제 : N종류의 화폐의 갯수를 최소한으로 사용하여 M원이 되도록하는 최소한의 화폐갯수, 불가능하면 -1출력 
# 푸는 방법: 0원 부터 M원까지 dp테이블을 만든다. 
#            min(dp에 저장된 값,지금화폐-입력받은 화폐단위+1) 
#            => 기존에 저장된 최소갯수는 큰값에 적용되도 값을 그대로 가짐 
#               그래서 그값에서 화폐단위를 더한것이 더 작은지 비교하는것

n,m = map(int,input().split())
array = [int(input()) for _ in range(n)]
d = [10001] * (m+1) # 1 <= m <= 10000라서 : 0이나 -1 하면 안되나? 안되지 min해야하니까 최대한 큰값을 넣어주자
d[0] = 0
for i in range(n):
    for j in range(array[i],m+1):#가장 작은 화폐단위 부터 M까지해야 M이 단위보다 작을때 10001출력
        d[j]= min(d[j],d[j-array[i]]+1)
if d[m] == 10001:
    print(-1)
else:
    print(d[m])


